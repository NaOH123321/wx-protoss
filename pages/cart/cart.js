"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var cart_model_1 = require("./cart-model");
var cart = new cart_model_1.Cart();
Page({
    data: {
        loadingHidden: false,
        selectedCounts: 0,
        selectedTypeCounts: 0,
        account: 0,
        cartData: []
    },
    onShow: function () {
        var cartData = cart.getCartDataFromLocal();
        var cal = this._calcTotalAccountAndCounts(cartData);
        this.setData({
            selectedCounts: cal.selectedCounts,
            selectedTypeCounts: cal.selectedTypeCounts,
            loadingHidden: true,
            account: cal.account,
            cartData: cartData
        });
    },
    onHide: function () {
        cart.execSetStorageSync(this.data.cartData);
    },
    _calcTotalAccountAndCounts: function (data) {
        var account = 0;
        var selectedCounts = 0;
        var selectedTypeCounts = 0;
        var multiple = 100;
        for (var i = 0; i < data.length; i++) {
            if (data[i].selectStatus) {
                account += data[i].counts * Number(data[i].price) * multiple;
                selectedCounts += data[i].counts;
                selectedTypeCounts++;
            }
        }
        return {
            selectedCounts: selectedCounts,
            selectedTypeCounts: selectedTypeCounts,
            account: account / multiple
        };
    },
    _resetCartData: function () {
        var newData = this._calcTotalAccountAndCounts(this.data.cartData);
        this.setData({
            account: newData.account,
            selectedCounts: newData.selectedCounts,
            selectedTypeCounts: newData.selectedTypeCounts,
            cartData: this.data.cartData
        });
    },
    _getProductIndexById: function (id) {
        var data = this.data.cartData;
        var len = data.length;
        for (var i = 0; i < len; i++) {
            if (data[i].id == id) {
                return i;
            }
        }
        return 0;
    },
    changeCounts: function (event) {
        var id = cart.getDataSet(event, 'id');
        var type = cart.getDataSet(event, 'type');
        var index = this._getProductIndexById(id);
        var counts = 1;
        if (type == 'add') {
            cart.addCounts(id);
        }
        else {
            counts = -1;
            cart.cutCounts(id);
        }
        this.data.cartData[index].counts += counts;
        this._resetCartData();
    },
    delete: function (event) {
        var id = cart.getDataSet(event, 'id');
        var index = this._getProductIndexById(id);
        this.data.cartData.splice(index, 1);
        this._resetCartData();
        cart.delete(id);
    },
    toggleSelect: function (event) {
        var id = cart.getDataSet(event, 'id');
        var status = cart.getDataSet(event, 'status');
        var index = this._getProductIndexById(id);
        this.data.cartData[index].selectStatus = !status;
        this._resetCartData();
    },
    toggleSelectAll: function (event) {
        var status = cart.getDataSet(event, 'status') == 'true';
        var data = this.data.cartData;
        var len = data.length;
        for (var i = 0; i < len; i++) {
            data[i].selectStatus = !status;
        }
        this._resetCartData();
    },
    submitOrder: function () {
        wx.navigateTo({
            url: '../order/order?account=' + this.data.account + '&from=cart'
        });
    }
});
//# sourceMappingURL=data:application/json;base64,